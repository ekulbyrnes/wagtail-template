"""
Django settings for myproject project.

Generated by 'django-admin startproject' using Django 3.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path

import environ
env = environ.Env(
    # set casting, default value
    DEBUG=(bool, False),
    TIME_ZONE=(str, 'UTC')
)
# reading .env file
# environ.Env.read_env()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# Raises django's ImproperlyConfigured exception if SECRET_KEY not in
# os.environ
SECRET_KEY = env('SECRET_KEY')

# False if not in os.environ
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env('DEBUG')

ALLOWED_HOSTS = env('ALLOWED_HOSTS').split(',')


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # Add gis module for geospatial projects
    #'django.contrib.gis',
    # Include this to build REST APIs
    'rest_framework',
    # Include this to build on top of Boostrap 4
    'bootstrap4',
    'wagtail.contrib.forms',
    'wagtail.contrib.redirects',
    'wagtail.embeds',
    'wagtail.sites',
    'wagtail.users',
    'wagtail.snippets',
    'wagtail.documents',
    'wagtail.images',
    'wagtail.search',
    'wagtail.admin',
    'wagtail.core',
    'modelcluster',
    'taggit',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'wagtail.contrib.redirects.middleware.RedirectMiddleware',
]

ROOT_URLCONF = 'myproject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'myproject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        # Use regular postgres by default
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        # Use postgis for spatial projects
        #'ENGINE': 'django.contrib.gis.db.backends.postgis',
        'NAME': env("POSTGRES_DB"),
        'USER': env("POSTGRES_USER"),
        'PASSWORD': env("POSTGRES_PASSWORD"),
        'HOST': env("POSTGRES_HOST", default="localhost"),
        'PORT': env("POSTGRES_PORT", default="5432"),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = env("TIME_ZONE")

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
#? Does this need to be updated?? 
# >> 'Add a STATIC_ROOT setting if your project does not aready have one:
# $ STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATIC_ROOT = '/static/'

#? How to create a media volume - check @mattcen's repo and compare the docker-compose files.
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

#                               #
### WAGTAIL-specific SETTINGS ###
#                               #

# Add a WAGTAIL_SITE_NAME to be displayed on the dashboard
WAGTAIL_SITE_NAME = env("WAGTAIL_SITE_NAME")

# Don't add a trailing slash to Wagtail-served URLs
WAGTAIL_APPEND_SLASH = False

# Allow responsive HTML embedding
WAGTAILEMBEDS_RESPONSIVE_HTML = True

# Set recent edits on Wagtail Dashboard
# WAGTAILADMIN_RECENT_EDITS_LIMIT = 5

# Allow extended login form with extra fields
# WAGTAILADMIN_USER_LOGIN_FORM = 'users.forms.LoginForm'

# Wagtail gravatar provider
# WAGTAIL_GRAVATAR_PROVIDER_URL = '//www.garvatar.com/avatar'

# Changes whether the 'Submit for Moderation' button is displayed in the action menu
WAGTAIL_MODERATION_ENABLED = True

# Set whether commenting is enabled for pages (true by defauld)
# Disables commenting when false
WAGTAILADMIN_COMMENTS_ENABLED = False

# Use your own image model in wagtail, extending the 'AbstractImage' class
# WAGTAILIMAGES_IMAGE_MODEL = 'myapp.MyImage'

# ... and provide your own image base
# WAGTAILIMAGES_IMAGE_FORM_BASE = 'myapp.forms.MyImageBaseForm'

# Set max image upload size
# WAGTAILIMAGES_MAX_UPLOAD_SIZE = 20 * 1024 * 1024 # i.e. 20MB

# Specify the number of images per page shown on the main Images listing in the Wagtail Admin
# WAGTAILIMAGES_INDEX_PAGE_SIZE = 20

# Specify the number of items per page shown when viewing an images useage
# WAGTAILIMAGES_USAGE_PAGE_SIZE = 20

# Specify the number of images shown per page in the image chooser modal
WAGTAILIMAGES_CHOOSER_PAGE_SIZE = 12

#! Sort out the rest of the settings and drop them in here:
# https://docs.wagtail.io/en/stable/reference/settings.html

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

BOOTSTRAP4 = {
    'include_jquery': True
}
